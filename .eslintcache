[{"/home/wayan/Projects/NodePro/kurs/src/reportWebVitals.js":"1","/home/wayan/Projects/NodePro/kurs/src/App.js":"2","/home/wayan/Projects/NodePro/kurs/src/index.js":"3"},{"size":362,"mtime":1608706649439,"results":"4","hashOfConfig":"5"},{"size":2912,"mtime":1608711120699,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1608706649439,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jf40b8",{"filePath":"10","messages":"11","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/wayan/Projects/NodePro/kurs/src/reportWebVitals.js",[],"/home/wayan/Projects/NodePro/kurs/src/App.js",["15","16","17"],"import './App.css';\nimport React, { useState, useEffect } from 'react';\n\nlet formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'IDR',\n\n  // These options are needed to round to whole numbers if that's what you want.\n  //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n  //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n});\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([])\n  const [total, setTotal] = useState(0)\n\n  const handleChange = (evt) => {\n    const kurs = items[0].beli;\n    const total = kurs * evt.target.value;\n    setTotal(total)\n  }\n\n  useEffect(() => {\n    fetch(\"https://wysdi-fastapi.vercel.app/kurs\", {\n\n    })\n        .then(res => res.json())\n        .then(\n            (result) => {\n              setIsLoaded(true);\n              result.sort((a,b) => b.beli - a.beli)\n              setItems(result);\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              setIsLoaded(true);\n              setError(error);\n            }\n        )\n  }, [])\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Currency Calculator</h1>\n      </header>\n      <main>\n        <article>\n          <section>\n            <h2></h2>\n            <p>Random project to fetch the currency number from various Indonesia Bank\n            </p>\n          </section>\n          <section style={{ textAlign: 'center'}}>\n            <h2></h2>\n            { isLoaded && (\n                <table>\n                  <thead>\n\n                  <tr>\n                    {items.map(item => (\n                        <th>{item.bank}</th>\n                    ))}\n                  </tr>\n                  </thead>\n                  <tbody>\n\n                      <tr>\n                        {items.map(item => (\n                          <td>{item.beli}</td>\n                        ))}\n\n                      </tr>\n\n                  </tbody>\n                  <tfoot>\n\n                  </tfoot>\n                </table>\n            )}\n\n          </section>\n          <section>\n\n            <form onSubmit=\"showOutput(); return false;\" onReset=\"hideOutput()\">\n              <fieldset>\n                <label htmlFor=\"\" style={{ textAlign: 'center'}}>Calculator</label>\n                <br />\n                <input id=\"full-name\" type=\"text\" placeholder={'Amount'} onChange={handleChange}/>\n                 <br />\n                  <h3 style={{ textAlign: 'center'}}>{formatter.format(total)}</h3>\n              </fieldset>\n            </form>\n          </section>\n        </article>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","/home/wayan/Projects/NodePro/kurs/src/index.js",[],{"ruleId":"18","severity":1,"message":"19","line":14,"column":10,"nodeType":"20","messageId":"21","endLine":14,"endColumn":15},{"ruleId":"22","severity":1,"message":"23","line":53,"column":13,"nodeType":"24","endLine":53,"endColumn":17},{"ruleId":"22","severity":1,"message":"23","line":58,"column":13,"nodeType":"24","endLine":58,"endColumn":17},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement"]